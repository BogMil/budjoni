@page "/model"
@using Budjoni.DAL
@using Budjoni.DAL.Models
@inject IJSRuntime JsRuntime
@inject ApplicationDbContext Db
@inject ModelService ModelService

<h4>
    Modeli buđonija <button>
        <NavLink class="nav-link" href="model/create">
            <span class="oi oi-plus" aria-hidden="true"></span>
        </NavLink>
    </button>
</h4>



@if (modeliObuce == null)
{
    <p><em>Loading...</em></p> }
else
{
    @foreach (var model in modeliObuce)
    {
        <MatCard class="demo-mat-card">
            <div class="demo-mat-card-content">
                <MatHeadline6 class="demo-mat-card-clean-margin">
                    Our Changing Planet
                </MatHeadline6>
                <MatSubtitle2 class="demo-mat-card-clean-margin">
                    by Kurt Wagner
                </MatSubtitle2>
            </div>
            <MatCardContent>
                <div class="demo-mat-card-content">
                    <MatSubtitle2 class="demo-mat-card-clean-margin">
                        <div class="mat-layout-grid" style="padding: 2px 10px">
                            <div class="mat-layout-grid-inner">
                                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">@model.NazivModela - @model.Sifra </div>
                            </div>
                        </div>
                    </MatSubtitle2>
                </div>
                <MatBody2 class="demo-mat-card-content demo-mat-card-clean-margin">
                    Visit ten places on our planet that are undergoing the biggest changes today.
                </MatBody2>
            </MatCardContent>
        </MatCard>
    }
}

    @code { private List<Model> modeliObuce;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            modeliObuce = ModelService.All();
        });
    }

    async void IzbrisiModel(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Miro, da li si sigurna da hoces da obrises budjonija?");

        if (!confirmed)
            return;

        var modelObuce = Db.Modeli.Find(id);
        Db.Modeli.Remove(modelObuce);
        Db.SaveChanges();
        modeliObuce = Db.Modeli.ToList();
        StateHasChanged();
    } }
